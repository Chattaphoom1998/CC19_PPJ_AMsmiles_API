const prisma = require("../models/prisma");
const bcrypt = require("bcryptjs");

const hashedPassword = bcrypt.hashSync("P@ssw0rd123", 10);

console.log("Seeding additional Admins and Doctors...");

// üîπ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏à‡∏£‡∏¥‡∏á (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏∏‡∏î‡πÉ‡∏´‡∏°‡πà)
const extraAdminNames = [
	{ en: "Alice", th: "‡∏≠‡∏•‡∏¥‡∏ã" },
	{ en: "Brian", th: "‡πÑ‡∏ö‡∏£‡∏≠‡∏±‡∏ô" },
	{ en: "Charlotte", th: "‡∏ä‡∏≤‡∏£‡πå‡∏•‡πá‡∏≠‡∏ï‡∏ï‡πå" },
	{ en: "Derek", th: "‡πÄ‡∏î‡πÄ‡∏£‡πá‡∏Ñ" },
	{ en: "Ella", th: "‡πÄ‡∏≠‡∏•‡∏•‡πà‡∏≤" },
	{ en: "Frederick", th: "‡πÄ‡∏ü‡∏£‡πÄ‡∏î‡∏≠‡∏£‡∏¥‡∏Ñ" },
	{ en: "Gabriella", th: "‡∏Å‡∏≤‡πÄ‡∏ö‡∏£‡∏µ‡∏¢‡∏•‡∏•‡∏≤" },
	{ en: "Harrison", th: "‡πÅ‡∏Æ‡∏£‡πå‡∏£‡∏¥‡∏™‡∏±‡∏ô" },
	{ en: "Isabelle", th: "‡∏≠‡∏¥‡∏ã‡∏≤‡πÄ‡∏ö‡∏•" },
	{ en: "Jacob", th: "‡πÄ‡∏à‡∏Ñ‡∏≠‡∏ö" },
];

const extraDoctorNames = [
	{ en: "Dr. Kevin", th: "‡∏´‡∏°‡∏≠‡πÄ‡∏Ñ‡∏ß‡∏¥‡∏ô" },
	{ en: "Dr. Laura", th: "‡∏´‡∏°‡∏≠‡∏•‡∏≠‡∏£‡πà‡∏≤" },
	{ en: "Dr. Matthew", th: "‡∏´‡∏°‡∏≠‡πÅ‡∏°‡∏ó‡∏ò‡∏¥‡∏ß" },
	{ en: "Dr. Natalie", th: "‡∏´‡∏°‡∏≠‡∏ô‡∏≤‡∏ï‡∏≤‡∏•‡∏µ" },
	{ en: "Dr. Oliver", th: "‡∏´‡∏°‡∏≠‡πÇ‡∏≠‡∏•‡∏¥‡πÄ‡∏ß‡∏≠‡∏£‡πå" },
	{ en: "Dr. Patricia", th: "‡∏´‡∏°‡∏≠‡πÅ‡∏û‡∏ó‡∏£‡∏¥‡πÄ‡∏ã‡∏µ‡∏¢" },
	{ en: "Dr. Quentin", th: "‡∏´‡∏°‡∏≠‡πÄ‡∏Ñ‡∏ß‡∏ô‡∏ï‡∏¥‡∏ô" },
	{ en: "Dr. Rachel", th: "‡∏´‡∏°‡∏≠‡∏£‡∏≤‡πÄ‡∏ä‡∏•" },
	{ en: "Dr. Samuel", th: "‡∏´‡∏°‡∏≠‡∏ã‡∏≤‡∏°‡∏π‡πÄ‡∏≠‡∏•" },
	{ en: "Dr. Tiffany", th: "‡∏´‡∏°‡∏≠‡∏ó‡∏¥‡∏ü‡∏ü‡∏≤‡∏ô‡∏µ‡πà" },
];

async function seedExtraAdminsAndDoctors() {
	try {
		// ‚úÖ ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Clinics ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
		const clinics = await prisma.clinic.findMany();

		if (clinics.length === 0) {
			console.log(
				"‚ùå No clinics found. Please run the main seed script first."
			);
			return;
		}

		for (const clinic of clinics) {
			console.log(`Adding extra admins and doctors for clinic ${clinic.id}...`);

			// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° 10 Admins ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏•‡∏¥‡∏ô‡∏¥‡∏Å
			for (let i = 0; i < 10; i++) {
				await prisma.admin.create({
					data: {
						firstNameEn: extraAdminNames[i].en,
						lastNameEn: "Brown",
						firstNameTh: extraAdminNames[i].th,
						lastNameTh: "‡∏ö‡∏£‡∏≤‡∏ß‡∏ô‡πå",
						email: `newadmin${i + 1}_clinic${clinic.id}@amsmiles.com`,
						password: hashedPassword,
						phone: `082-345-67${clinic.id}${i}`,
						idCard: `11017067890${clinic.id}${i}`,
						roleId: 1, // Admin Role
						clinicId: clinic.id,
					},
				});
			}

			// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° 10 Doctors ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏•‡∏¥‡∏ô‡∏¥‡∏Å
			for (let i = 0; i < 10; i++) {
				const doctor = await prisma.admin.create({
					data: {
						firstNameEn: extraDoctorNames[i].en,
						lastNameEn: "Davis",
						firstNameTh: extraDoctorNames[i].th,
						lastNameTh: "‡πÄ‡∏î‡∏ß‡∏¥‡∏™",
						email: `newdoctor${i + 1}_clinic${clinic.id}@amsmiles.com`,
						password: hashedPassword,
						phone: `083-456-78${clinic.id}${i}`,
						idCard: `11017078901${clinic.id}${i}`,
						roleId: 2, // Doctor Role
						clinicId: clinic.id,
					},
				});

				// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• `DoctorInfo` ‡πÉ‡∏´‡πâ‡∏´‡∏°‡∏≠‡πÉ‡∏´‡∏°‡πà
				await prisma.doctorInfo.create({
					data: {
						department: `Specialist ${i + 11}`,
						dentalCouncilRegisId: `DCR${clinic.id}${i + 10}`,
						adminId: doctor.id,
					},
				});
			}
		}

		console.log(
			"‚úÖ Additional Admins and Doctors have been added successfully!"
		);
	} catch (error) {
		console.error("‚ùå Error adding extra Admins and Doctors:", error);
	} finally {
		await prisma.$disconnect();
	}
}

// üî• ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô seedExtraAdminsAndDoctors()
seedExtraAdminsAndDoctors();
